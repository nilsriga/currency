name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  backend-tests:
    runs-on: self-hosted
    name: Run Backend Tests

    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Start MySQL Service in Docker
        run: |
          docker run --name mysql -e MYSQL_ROOT_PASSWORD=root_password \
            -e MYSQL_DATABASE=test_db \
            -e MYSQL_USER=test_user \
            -e MYSQL_PASSWORD=test_password \
            -p 3306:3306 -d mysql:8.0
          until docker exec mysql mysqladmin ping -uroot -proot_password --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 2
          done

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          cd back
          npm install

      - name: Run tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: test_user
          DB_PASSWORD: test_password
          DB_NAME: test_db
        run: |
          cd back
          npm test

  # frontend-tests:
  #   runs-on: self-hosted
  #   name: Run Frontend Tests
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '22'

  #     - name: Install dependencies
  #       run: |
  #         cd front
  #         npm install

  #     - name: Run tests
  #       run: |
  #         cd front
  #         npm test

  deploy:
    runs-on: ubuntu-24.01
    needs: [
      backend-tests,
      # frontend-tests
      ]

    name: Deploy Application
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Backend
        run: |
          ssh root@134.209.252.76 "cd /var/www/currency/back && git pull && npm install && npm run build && pm2 restart back"

      - name: Deploy Frontend
        run: |
          ssh root@134.209.252.76 "cd /var/www/currency/front && git pull && npm install && npm run build && pm2 restart front"

      - name: Rollback on Failure
        if: failure()
        run: |
          ssh root@134.209.252.76 "cd /var/www/currency/back && git reset --hard HEAD~1 && pm2 restart back"
          ssh root@134.209.252.76 "cd /var/www/currency/front && git reset --hard HEAD~1 && pm2 restart front"
